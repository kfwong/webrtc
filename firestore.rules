service cloud.firestore {
  match /databases/{database}/documents {
    match /rooms/{room} {
      allow create: if isAuthorized() && !isRoomExists();
      allow get, delete: if isAuthorized() && isRoomExists() && isOwner();
      
      match /players/{player} {
      	allow create: if isAuthorized() && !isPlayerExists();
        allow get, update, delete: if isAuthorized() && isPlayerExists() && (isOwner() || isRoomOwner());
        allow list: if isAuthorized() && isRoomOwner();
        
        function isPlayerExists(){
          return exists(/databases/$(database)/documents/rooms/$(room)/players/$(player));
        }
        
        function isRoomOwner(){
          return get(/databases/$(database)/documents/rooms/$(room)).data.uid == request.auth.uid
        }

      }
      
      function isRoomExists(){
        return exists(/databases/$(database)/documents/rooms/$(room));
      }
    }
    
    function isAuthorized(){
    	return request.auth.uid != null;
    }
    
    function isOwner(){
    	return request.auth.uid == existing().data.uid;
    }

    function incoming(){
      return request.resource;
    }

    function existing(){
      return resource;
    }
  }
}